xmin <- seq(from=100,to=1000,by=50)
draw_sample <- Vectorize(function(xmin) {
XX <- X[X>xmin]
alpha <- 1+1/(sum(log(XX/xmin)))
return(xmin * (1-runif(sample_size))^(-1/(alpha-1)))
})
compute_KS <- Vectorize(function(xmin) {
XX <- X[X>=xmin]
sample_size <<- length(XX)
candidate <- draw_sample(xmin)
sample_size <<- length(X)
ks.test(XX,candidate)$p.value
})
suppressWarnings(ks_data <- compute_KS(xmin))
plot(xmin,ks_data)
X <- sqrt(interarrival)
lambda <- 1/mean(X)
candidate <- rexp(length(X),rate=lambda)
ks.test(X,candidate)
runks <- Vectorize(function(cutoff) {
X <- interarrival[interarrival>cutoff]
lambda <- 1/mean(X)
candidate <- rexp(length(X),rate=lambda)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=10,to=100,by=1)
ksresults <- runks(cutoff)
plot(cutoff,ksresults)
X <- interarrival^0.5
X <- X[X>20]
hist(X,breaks=60)
lambda <- 1/mean(X)
candidate <- rexp(length(X),rate=lambda)
ks.test(X,candidate)
X <- interarrival
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
hist(X)
hist(candidate)
hist(X)
quakes <- read.csv("Quakes.csv")
quakes <- quakes[quakes$Magnitude>=4]
quakes <- quakes[quakes$Magnitude>=4,]
interarrival <- quakes$TimelineHours[2:nrow(quakes)] -
quakes$TimelineHours[1:(nrow(quakes)-1)]
rm(quakes)
hist(log(interarrival),breaks=60)
hist(interarrival,breaks=60)
hist(interarrival)
hist(interarrival,breaks=30)
hist(log(interarrival),breaks=30)
hist(interarrival^0.1,breaks=30)
hist((interarrival^0.1)[interarrival>1],breaks=30)
hist((interarrival^0.1)[interarrival>1.5],breaks=30)
lambda <- 1/mean(interarrival)
sample_size <- length(interarrival)
candidate <- rexp(sample_size,rate=lambda)
ks.test(interarrival,candidate)
X <- interarrival
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
X <- interarrival[interarrival>0]
hist(X,breaks=60)
sample_size <- length(X)
xmin <- seq(from=100,to=1000,by=50)
draw_sample <- Vectorize(function(xmin) {
XX <- X[X>xmin]
alpha <- 1+1/(sum(log(XX/xmin)))
return(xmin * (1-runif(sample_size))^(-1/(alpha-1)))
})
compute_KS <- Vectorize(function(xmin) {
XX <- X[X>=xmin]
sample_size <<- length(XX)
candidate <- draw_sample(xmin)
sample_size <<- length(X)
ks.test(XX,candidate)$p.value
})
suppressWarnings(ks_data <- compute_KS(xmin))
plot(xmin,ks_data)
X <- interarrival
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
quakes <- read.csv("Quakes.csv")
quakes <- quakes[quakes$Magnitude>=3,]
interarrival <- quakes$TimelineHours[2:nrow(quakes)] -
quakes$TimelineHours[1:(nrow(quakes)-1)]
rm(quakes)
X <- interarrival
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
quakes <- read.csv("Quakes.csv")
hist(quakes$Magnitude)
quakes <- read.csv("Quakes.csv")
mags <- quakes$Magnitudes
rm(quakes)
hist(mags,breaks=30)
mags <- quakes$Magnitude
quakes <- read.csv("Quakes.csv")
mags <- quakes$Magnitude
rm(quakes)
hist(mags,breaks=30)
X <- mags
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
X <- mags[mags>0.5]-0.5
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
X <- mags[mags>0.4]-0.4
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
X <- mags[mags>0.3]-0.3
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
X <- mags[mags>0.35]-0.35
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
X <- mags[mags>0.4]-0.4
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
X <- mags[mags>0.41]-0.41
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
X <- mags[mags>0.395]-0.395
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]-cutoff
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.3,to=0.5,by=0.001)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]-cutoff
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.001)
y <- runks(cutoff)
plot(cutoff,y)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
hist(mags,breaks=30)
?rchisq
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]-cutoff
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rchisq(length(X),df=5)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.001)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]-cutoff
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.001)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
candidate <- rnorm(length(X),mean=mu,sd=sqrt(v))
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.001)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
candidate <- rchisq(length(X),df=1)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.01)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
candidate <- rchisq(length(X),df=2)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.01)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
candidate <- rchisq(length(X),df=3)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.01)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
candidate <- rchisq(length(X),df=8)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.01)
y <- runks(cutoff)
plot(cutoff,y)
cutoff=0.5
X <- mags[mags>cutoff]
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.001)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]-cutoff
mu <- mean(X)
v <- var(X)
scale <- v/mu
shape <- mu^2/v
candidate <- rgamma(length(X),scale=scale,shape=shape)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.001)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]-cutoff
mu <- mean(X)
v <- var(X)
candidate <- rchisq(length(X),df=8)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.01)
y <- runks(cutoff)
plot(cutoff,y)
runks <- Vectorize(function(cutoff) {
X <- mags[mags>cutoff]-cutoff
mu <- mean(X)
v <- var(X)
candidate <- rchisq(length(X),df=1)
ks.test(X,candidate)$p.value
})
cutoff <- seq(from=0.4,to=0.8,by=0.01)
y <- runks(cutoff)
plot(cutoff,y)
X <- mags[mags>cutoff]-cutoff
glm(y~.,data=X,family=Gamma(link=identity))
X <- data.frame(y=X)
glm(y~.,data=X,family=Gamma(link=identity))
min(X)
X <- mags[mags>cutoff]
min(X)
cutoff
cutoff<-0.5
X <- mags[mags>cutoff]-cutoff
X <- data.frame(y=X)
glm(y~.,data=X,family=Gamma(link=identity))
cutoff <- seq(from=0.4,to=0.6,by=0.1)
s <- seq(from=1,to=4,by=1)
m <- seq(from=2,to=8,by=1)
f <- seq(from=1,to=5,by=1)
params <- expand.grid(cutoff,s,m,f)
params[2,]
z <- params[2]
z[1]
z <- params[2,]
z[1]
runks <- Vectorize(function(j) {
cutoff <- params[j,1]
s <- params[j,2]
m <- params[j,3]
f <- params[j,4]
X <- mags[mags>cutoff]-cutoff
candidate <- rgamma(length(X),s=s,m=m,f=f)
ks.test(X,candidate)$p.value
})
y <- runks(1:nrow(params))
runks <- Vectorize(function(j) {
cutoff <- params[j,1]
s <- params[j,2]
m <- params[j,3]
f <- params[j,4]
X <- mags[mags>cutoff]-cutoff
candidate <- rggamma(length(X),s=s,m=m,f=f)
ks.test(X,candidate)$p.value
})
y <- runks(1:nrow(params))
install.packages('rmutil')
library(rmutil)
runks <- Vectorize(function(j) {
cutoff <- params[j,1]
s <- params[j,2]
m <- params[j,3]
f <- params[j,4]
X <- mags[mags>cutoff]-cutoff
candidate <- rggamma(length(X),s=s,m=m,f=f)
ks.test(X,candidate)$p.value
})
y <- runks(1:nrow(params))
max(y)
cutoff <- 0.5
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
candidate <- rnorm(length(X),mean=mu,sd=sqrt(v))
ks.test(X,candidate)$p.value
cutoff <- 0.5
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
candidate <- rnorm(length(X),mean=mu,sd=sqrt(v))
ks.test(X,candidate)
print(ks.test(X,candidate))
library(ggplot2)
library(dplyr)
cutoff <- 0.5
X <- mags[mags>cutoff]
mu <- mean(X)
v <- var(X)
candidate <- rnorm(length(X),mean=mu,sd=sqrt(v))
print(ks.test(X,candidate))
df1 <- data.frame(value=X,from='data')
df2 <- data.frame(value=candidate,from='candidate')
df <- bind_rows(df1,df2)
ggplot(data=df,aes(value,fill=from)) +
geom_histogram(alpha=0.5)
ggplot(data=df,aes(value,fill=from)) +
geom_histogram(alpha=0.5,breaks=60)
ggplot(data=df,aes(value,fill=from)) +
geom_histogram(alpha=0.5)
ggplot(data=df,aes(value,fill=from)) +
geom_histogram(alpha=0.5,aes(y=..density..))
install.packages('fitdist')
install.packages('fitdistrplus')
library(fitdistrplus)
#cutoff <- 0.5
#X <- mags[mags>cutoff]
X <- mags
fit.gamma <- fitdist(X,distr='gamma',method='mle')
fit.gamma <- fitdist(X,distr='gamma',method='mle',lower=c(0,0))
#cutoff <- 0.5
#X <- mags[mags>cutoff]
X <- mags
fit.weibull <- fitdist(X,distr='weibull',
method='mle',
lower=c(0,0))
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.weibull <- fitdist(X,distr='weibull',
method='mle',
lower=c(0,0))
summary(fit.weibull)
summary(fit.weibull)
candidate <- rweibull(length(X),
shape=fit.weibull$estimate['shape'],
scale=fit.weibull$estimate['scale'])
print(ks.test(X,candidate))
df1 <- data.frame(value=X,from='data')
df2 <- data.frame(value=candidate,from='candidate')
df <- bind_rows(df1,df2)
ggplot(data=df,aes(value,fill=from)) +
geom_histogram(alpha=0.5,aes(y=..density..))
library(fitdistrplus)
X <- mags[mags>1]
plotdist(X,hist=TRUE,demp=TRUE)
descdist(X,boot=1000)
fn <- fitdist(X,'normal')
fn <- fitdist(X,'norm')
summary(fn)
plot(fn)
cutoff <- 1.0
X <- mags[mags>cutoff]
fit.weibull <- fitdist(X,distr='gamma',
method='mle',
lower=c(0,0))
print(summary(fit.weibull))
plot(fit.weibull)
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.weibull <- fitdist(X,distr='gamma',
method='mle',
lower=c(0,0))
fit.gamma <- fitdist(X,distr='gamma',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
X <- mags[mags>0.5]
plotdist(X,hist=TRUE,demp=TRUE)
descdist(X,boot=1000)
fn <- fitdist(X,'norm')
print(summary(fn))
plot(fn)
library(ggplot2)
library(dplyr)
library(fitdistrplus)
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.gamma <- fitdist(X,distr='gamma',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
library(fitdistrplus)
cutoff <- 1.0
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.lognorm <- fitdist(X,distr='lognormal',
method='mle',
lower=c(0,0))
fit.lognorm <- fitdist(X,distr='lnorm',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
X <- mags[mags>cutoff]-cutoff
fit.lognorm <- fitdist(X,distr='lnorm',
method='mle',
lower=c(0,0))
X <- mags[mags>cutoff]-0.1
fit.lognorm <- fitdist(X,distr='lnorm',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
library(fitdistrplus)
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.lognorm <- fitdist(X,distr='lnorm',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
X <- mags[mags>0.5]
descdist(X,boot=1000)
