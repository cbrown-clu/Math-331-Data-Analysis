xmin <- 0
xmax <- 1
ymin <- 0
ymax <- 0.3
number_of_darts <- 10000
image_area <- (xmax-xmin)*(ymax-ymin)
X <- runif(number_of_darts,min=xmin,max=xmax)
Y <- runif(number_of_darts,min=ymin,max=ymax)
darts_in_region <- which(Y <= f(X))
darts_in_region <- length(which(Y <= f(X)))
darts_in_region/number_of_darts
image_area <- (xmax-xmin)*(ymax-ymin)
image_area
darts_in_region/number_of_darts * image_area
?integrate
integrate(f,lower=0,upper=1)
f_temp <- function(x1,x2) {
if (x1>=0 & x1<=1 & x2>=0 & x2<=1) {
return(5-x1-x2)
} else {
return(0)
}
}
number_of_darts <- 10000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=5)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
number_of_darts <- 10000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=5)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
length(which(outputs<=Y))/number_of_darts * 2*2*5
number_of_darts <- 10000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=5)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
volume <- length(which(outputs<=Y))/number_of_darts * 2*2*5
volume
set.seed(42)
number_of_darts <- 100000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=5)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
volume <- length(which(outputs<=Y))/number_of_darts * 2*2*5
volume
f <- function(x1,x2) {
return(f_temp(x1,x2)/volume)
}
set.seed(42)
number_of_darts <- 1000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=1)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
keepers <- which(outputs<=Y)
x1 <- X1[keepers]
x2 <- X2[keepers]
plot(x1,x2)
set.seed(42)
number_of_darts <- 100000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=5)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
volume <- length(which(Y<=outputs))/number_of_darts * 2*2*5
volume
f <- function(x1,x2) {
return(f_temp(x1,x2)/volume)
}
set.seed(42)
number_of_darts <- 1000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=1)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
keepers <- which(Y<=outputs)
x1 <- X1[keepers]
x2 <- X2[keepers]
plot(x1,x2)
set.seed(42)
number_of_darts <- 10000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=1)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
keepers <- which(Y<=outputs)
x1 <- X1[keepers]
x2 <- X2[keepers]
plot(x1,x2)
f_temp <- function(x1,x2) {
if (x1>=0 & x1<=2 & x2>=0 & x2<=2) {
return(5*exp(-x1-x2))
} else {
return(0)
}
}
set.seed(42)
number_of_darts <- 100000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=5)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
volume <- length(which(Y<=outputs))/number_of_darts * 2*2*5
volume
f <- function(x1,x2) {
return(f_temp(x1,x2)/volume)
}
set.seed(42)
number_of_darts <- 10000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=1)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
keepers <- which(Y<=outputs)
x1 <- X1[keepers]
x2 <- X2[keepers]
plot(x1,x2)
set.seed(42)
number_of_darts <- 1000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=1)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
keepers <- which(Y<=outputs)
x1 <- X1[keepers]
x2 <- X2[keepers]
plot(x1,x2)
set.seed(42)
number_of_darts <- 10000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=1)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
keepers <- which(Y<=outputs)
x1 <- X1[keepers]
x2 <- X2[keepers]
plot(x1,x2)
set.seed(42)
number_of_darts <- 5000
X1 <- runif(number_of_darts,min=0,max=2)
X2 <- runif(number_of_darts,min=0,max=2)
Y <- runif(number_of_darts,min=0,max=1)
outputs <- sapply(1:length(X1),function(j) f_temp(X1[j],X2[j]))
keepers <- which(Y<=outputs)
x1 <- X1[keepers]
x2 <- X2[keepers]
plot(x1,x2)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
extra_steps <- 2*coin_flips
coin_flips <- sample(c(-1,1),100)
extra_steps <- 2*coin_flips
coin_flips <- sample(c(-1,1),100,replace=TRUE)
extra_steps <- 2*coin_flips
steps <- cumsum(1+extra_steps)
location <- cumsum(1+extra_steps)
plot(location)
set.seed(42)
coin_flips <- sample(c(-1,1),100,replace=TRUE)
extra_steps <- 2*coin_flips
location <- cumsum(1+extra_steps)
plot(location)
location[-1]
tail(location)
tail(location,1)
set.seed(42)
number_of_trips <- 10000
one_trip <- function() {
coin_flips <- sample(c(-1,1),100,replace=TRUE)
extra_steps <- 2*coin_flips
location <- cumsum(1+extra_steps)
return(tail(location,1))
}
data <- sapply(1:number_of_trips,function(z) one_trip())
### Example: Professor Z's Office Hours
Professor Z tries to show up at his office for appointments on time.  He really does!  But students and faculty frequently stop him to ask questions or just chat, and he is a typical absent-minded professor, so sometimes he is late.
set.seed(42)
number_of_trips <- 10000
one_trip <- function() {
coin_flips <- sample(c(-1,1),100,replace=TRUE)
extra_steps <- 2*coin_flips
location <- cumsum(1+extra_steps)
return(tail(location,1))
}
data <- sapply(1:number_of_trips,function(z) one_trip())
hist(data,breaks=60)
hist(data,breaks=60,col='blue')
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
data <- sample(c(0,1,1,1,1,1,1,2,2,2),100000)
data <- sample(c(0,1,1,1,1,1,1,2,2,2),100000,replace=FALSE)
data <- sample(c(0,1,1,1,1,1,1,2,2,2),100000,replace=TRUE)
mean(data)
data <- sample(c(0,1,1,1,1,1,1,2,2,2),1000000,replace=TRUE)
mean(data)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
x <- c(1,2,5,7)
x^2
f <- function(x) {
if (x>3) {
return(0)
} else {
return(x^2)
}
}
f <- Vectorize(f)
x <- c(1,2,5,7)
f(x)
run_experiments <- function(number_of_experiments) {
data <- sapply(1:number_of_experiments,
function(z) one_roll())
number_of_7 <- length(which(data==7))
return(number_of_7/number_of_experiments)
}
run_experiments <- Vectorize(run_experiments)
X <- 100*(1:20)
estimates <- run_experiments(X)
Y <- abs(estimates-6/36)
plot(X,Y)
X <- 100*(1:200)
estimates <- run_experiments(X)
Y <- abs(estimates-6/36)
plot(X,Y)
box <- c(rep(0,10),rep(1,30),rep(2,50),rep(3,10))
data <- sample(box,500,replace=TRUE)
hist(data,breaks=60)
barplot(table(data))
data(HairEyeColor)
head(HairEyeColor)
data(Loblolly)
head(Loblolly)
X <- Loblolly$Seed
X <- as.character(Loblolly$Seed)
X <- as.numeric(as.character(Loblolly$Seed))
unique(X)
length(unique(X))
data <- sample(X,500,replace=TRUE)
hist(data,breaks=60)
barplot(table(data))
data(quakes)
quakes$stations
unique(quakes$stations)
?hist
Nile_approx <- approxfun(Nile_density)
f <- function(x){
if (x<min(Nile) | x>max(Nile)) {
r <- 0
} else {
r <- Nile_approx(x)
}
return(r)
}
f <- Vectorize(f)
X <- min(Nile):max(Nile)
Y <- sapply(X,function(z) integrate(f,lower=-Inf,upper=z,stop.on.error = FALSE)$value)
hist(Nile,freq=TRUE)
lines(X,Y,col='blue',lwd=2)
Nile_approx <- approxfun(Nile_density)
f <- function(x){
if (x<min(Nile) | x>max(Nile)) {
r <- 0
} else {
r <- Nile_approx(x)
}
return(r)
}
f <- Vectorize(f)
X <- min(Nile):max(Nile)
Y <- sapply(X,function(z) integrate(f,lower=-Inf,upper=z,stop.on.error = FALSE)$value)
hist(Nile,freq=FALSE)
lines(X,Y,col='blue',lwd=2)
Nile_approx <- approxfun(Nile_density)
f <- function(x){
if (x<min(Nile) | x>max(Nile)) {
r <- 0
} else {
r <- Nile_approx(x)
}
return(r)
}
f <- Vectorize(f)
X <- min(Nile):max(Nile)
Y <- sapply(X,function(z) integrate(f,lower=-Inf,upper=z,stop.on.error = FALSE)$value)
hist(Nile,freq=FALSE)
lines(X,f(X),col='blue',lwd=2)
plot(X,Y,type='l',lwd=2)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
data(faithful)
head(faithful)
X <- faithful$eruptions
hist(X,breaks=60)
X <- faithful$waiting
hist(X,breaks=60)
X <- X[X>68]
hist(X)
hist(X,breaks=40)
hist(X,breaks=30)
mu <- mean(X)
sigma <- sd(X)
hist(X,breaks=30,freq=FALSE)
hist(X,breaks=30,freq=FALSE)
x <- seq(from=69,to=100,by=0.5)
Y <- dnorm(x,mean=mu,sd=sigma)
hist(X,breaks=30,freq=FALSE)
x <- seq(from=69,to=100,by=0.5)
Y <- dnorm(x,mean=mu,sd=sigma)
lines(x,y,col='blue',lwd=2)
hist(X,breaks=30,freq=FALSE)
x <- seq(from=69,to=100,by=0.5)
y <- dnorm(x,mean=mu,sd=sigma)
lines(x,y,col='blue',lwd=2)
hist(X,breaks=30,freq=FALSE)
x <- seq(from=69,to=100,by=0.5)
y <- dnorm(x,mean=mu,sd=sigma)
lines(x,y,col='blue',lwd=3)
interval <- qnorm(c(.05,.95),mean=mu,sd=sigma)
interval
interval95 <- qnorm(c(.025,.975),mean=mu,sd=sigma)
interval95
data(faithful)
X <- faithful$eruptions
hist(X,breaks=60)
dX <- density(X)
dX <- density(X)
x <- seq(from = 1.5,to = 5.5,by=0.1)
dX <- density(X)
x <- seq(from = 1.5,to = 5.5,by=0.1)
f <- approxfun(dX$x,dX$y)
y <- f(x)
dX <- density(X)
x <- seq(from = 1.5,to = 5.5,by=0.1)
f <- approxfun(dX$x,dX$y)
y <- f(x)
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='ble',lwd=3)
dX <- density(X)
x <- seq(from = 1.5,to = 5.5,by=0.1)
f <- approxfun(dX$x,dX$y)
y <- f(x)
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
dX <- density(X,adjust=0.5)
x <- seq(from = 1.5,to = 5.5,by=0.1)
f <- approxfun(dX$x,dX$y)
y <- f(x)
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
dX <- density(X,adjust=0.5)
x <- seq(from = 1.5,to = 5.5,by=0.01)
f <- approxfun(dX$x,dX$y)
y <- f(x)
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
dX <- density(X,adjust=0.2)
x <- seq(from = 1.5,to = 5.5,by=0.01)
f <- approxfun(dX$x,dX$y)
y <- f(x)
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
dX <- density(X,adjust=0.3)
x <- seq(from = 1.5,to = 5.5,by=0.01)
f <- approxfun(dX$x,dX$y)
y <- f(x)
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
yy <- cumsum(y)
plot(x,yy)
yy <- cumsum(y)
plot(x,yy,type='l',lwd=2)
y
yy
yy <- cumsum(y)/100
plot(x,yy,type='l',lwd=2)
left <- x[which.min(abs(yy-.025))]
right <- x[which.min(abs(yy-.975))]
interval <- c(left,right)
interval
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
abline(v=left,col='red',lwd=3)
abline(v=right,col='red',lwd=3)
left <- x[which.min(abs(yy-.1))]
right <- x[which.min(abs(yy-.9))]
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
abline(v=left,col='red',lwd=3)
abline(v=right,col='red',lwd=3)
X <- faithful$waiting
hist(X,breaks=60)
X <- X[X>68]
hist(X,breaks=30,freq=FALSE)
mu <- mean(X)
sigma <- sd(X)
hist(X,breaks=30,freq=FALSE)
x <- seq(from=69,to=100,by=0.5)
y <- dnorm(x,mean=mu,sd=sigma)
lines(x,y,col='blue',lwd=3)
sample_size <- length(X)
one_mean <- function() {
return(mean(sample(X,sample_size,replace=TRUE)))
}
sample_means <- sapply(1:1000,function(z) one_mean())
sample_size <- length(X)
one_mean <- function() {
return(mean(sample(X,sample_size,replace=TRUE)))
}
sample_means <- sapply(1:1000,function(z) one_mean())
hist(sample_means,breaks=60,freq=FALSE)
sample_size <- length(X)
one_mean <- function() {
return(mean(sample(X,sample_size,replace=TRUE)))
}
sample_means <- sapply(1:1000,function(z) one_mean())
meanmu <- mean(sample_means)
meansigma <- sd(sample_means)
xmean <- seq(from=78,to=83,by=0.01)
ymean <- dnorm(xmean,mean=meanmu,sd=meansigma)
hist(X,breaks=30,freq=FALSE)
lines(x,y,col='blue',lwd=3)
lines(xmean,ymean,col='red',lwd=3)
sample_size <- length(X)
one_mean <- function() {
return(mean(sample(X,sample_size,replace=TRUE)))
}
sample_means <- sapply(1:1000,function(z) one_mean())
meanmu <- mean(sample_means)
meansigma <- sd(sample_means)
xmean <- seq(from=78,to=83,by=0.01)
ymean <- dnorm(xmean,mean=meanmu,sd=meansigma)
hist(X,breaks=30,freq=FALSE,ylim=c(0,max(ymean)))
lines(x,y,col='blue',lwd=3)
lines(xmean,ymean,col='red',lwd=3)
interval90 <- qnorm(c(.05,.95),mean=meanmu,sd=meansigma)
interval90
interval95 <- qnorm(c(.025,.975),mean=meanmu,sd=meansigma)
interval95
data(faithful)
X <- faithful$eruptions
hist(X,breaks=60)
dX <- density(X,adjust=0.3)
x <- seq(from = 1.5,to = 5.5,by=0.01)
f <- approxfun(dX$x,dX$y)
y <- f(x)
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
yy <- cumsum(y)/100
plot(x,yy,type='l',lwd=2)
sample_size <- length(X)
one_mean <- function() {
return(mean(sample(X,sample_size,replace=TRUE)))
}
sample_means <- sapply(1:1000,function(z) one_mean())
min(sample_means)
max(sample_means)
sample_size <- length(X)
one_mean <- function() {
return(mean(sample(X,sample_size,replace=TRUE)))
}
sample_means <- sapply(1:1000,function(z) one_mean())
meanmu <- mean(sample_means)
meansd <- sd(sample_means)
xmean <- seq(from=3.27,to=3.7,by=0.01)
ymean <- dnorm(xmean,mean=meanmu,sd=meansd)
hist(X,breaks=60,freq=FALSE,ylim=c(0,max(ymean)))
lines(x,y,col='blue',lwd=3)
lines(xmean,ymean,col='red',lwd=3)
interval <- qnorm(c(.025,.0975),mean=meanmu,sd=meansigma)
interval
interval <- qnorm(c(.025,.0975),mean=meanmu,sd=meansigma)
interval <- qnorm(c(.025,.975),mean=meanmu,sd=meansigma)
interval
sample_size <- length(X)
one_mean <- function() {
return(mean(sample(X,sample_size,replace=TRUE)))
}
sample_means <- sapply(1:1000,function(z) one_mean())
meanmu <- mean(sample_means)
meansigma <- sd(sample_means)
xmean <- seq(from=3.27,to=3.7,by=0.01)
ymean <- dnorm(xmean,mean=meanmu,sd=meansigma)
hist(X,breaks=60,freq=FALSE,ylim=c(0,max(ymean)))
lines(x,y,col='blue',lwd=3)
lines(xmean,ymean,col='red',lwd=3)
interval <- qnorm(c(.025,.975),mean=meanmu,sd=meansigma)
interval
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
abline(v=interval[1],col='red',lwd=3)
abline(v=interval[2],col='red',lwd=3)
interval <- qnorm(c(.1,.9),mean=meanmu,sd=meansigma)
hist(X,breaks=60,freq=FALSE)
lines(x,y,col='blue',lwd=3)
abline(v=interval[1],col='red',lwd=3)
abline(v=interval[2],col='red',lwd=3)
data(morley)
head(morley)
morley
data(Orange)
head(Orange)
data(LakeHuron)
head(LakeHuron)
hist(LakeHuron)
