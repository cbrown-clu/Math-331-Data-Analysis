fit.weibull <- fitdist(X,distr='weibull',
method='mle',
lower=c(0,0))
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.weibull <- fitdist(X,distr='weibull',
method='mle',
lower=c(0,0))
summary(fit.weibull)
summary(fit.weibull)
candidate <- rweibull(length(X),
shape=fit.weibull$estimate['shape'],
scale=fit.weibull$estimate['scale'])
print(ks.test(X,candidate))
df1 <- data.frame(value=X,from='data')
df2 <- data.frame(value=candidate,from='candidate')
df <- bind_rows(df1,df2)
ggplot(data=df,aes(value,fill=from)) +
geom_histogram(alpha=0.5,aes(y=..density..))
library(fitdistrplus)
X <- mags[mags>1]
plotdist(X,hist=TRUE,demp=TRUE)
descdist(X,boot=1000)
fn <- fitdist(X,'normal')
fn <- fitdist(X,'norm')
summary(fn)
plot(fn)
cutoff <- 1.0
X <- mags[mags>cutoff]
fit.weibull <- fitdist(X,distr='gamma',
method='mle',
lower=c(0,0))
print(summary(fit.weibull))
plot(fit.weibull)
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.weibull <- fitdist(X,distr='gamma',
method='mle',
lower=c(0,0))
fit.gamma <- fitdist(X,distr='gamma',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
X <- mags[mags>0.5]
plotdist(X,hist=TRUE,demp=TRUE)
descdist(X,boot=1000)
fn <- fitdist(X,'norm')
print(summary(fn))
plot(fn)
library(ggplot2)
library(dplyr)
library(fitdistrplus)
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.gamma <- fitdist(X,distr='gamma',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
library(fitdistrplus)
cutoff <- 1.0
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.lognorm <- fitdist(X,distr='lognormal',
method='mle',
lower=c(0,0))
fit.lognorm <- fitdist(X,distr='lnorm',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
X <- mags[mags>cutoff]-cutoff
fit.lognorm <- fitdist(X,distr='lnorm',
method='mle',
lower=c(0,0))
X <- mags[mags>cutoff]-0.1
fit.lognorm <- fitdist(X,distr='lnorm',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
library(fitdistrplus)
cutoff <- 0.5
X <- mags[mags>cutoff]
fit.lognorm <- fitdist(X,distr='lnorm',
method='mle',
lower=c(0,0))
print(summary(fit.gamma))
plot(fit.gamma)
X <- mags[mags>0.5]
descdist(X,boot=1000)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
sample_size <- 200
X <- rnorm(sample_size)
Y <- rt(sample_size,df=sample_size-1)
ks.test(X,Y)
sample_size <- 200
X <- rnorm(sample_size)
Y <- rt(sample_size,df=10)
ks.test(X,Y)
sample_size <- 200
X <- rnorm(sample_size)
Y <- rt(sample_size,df=3)
ks.test(X,Y)
sample_size <- 200
X <- rnorm(sample_size)
Y <- rt(sample_size,df=4)
ks.test(X,Y)
sample_size <- 200
X <- rnorm(sample_size)
Y <- rt(sample_size,df=3)
ks.test(X,Y)
sample_size <- 200
X <- rnorm(sample_size)
Y <- rt(sample_size,df=2)
ks.test(X,Y)
sample_size <- 200
X <- rnorm(sample_size)
Y <- rt(sample_size,df=5)
ks.test(X,Y)
sample_size <- 200
X <- rnorm(sample_size)
Y <- rt(sample_size,df=5)
ks.test(X,Y)
sample_size <- 200
X <- rt(sample_size,df=5)
Y <- rt(sample_size,df=5)
ks.test(X,Y)
sample_size <- 200
X <- rt(sample_size,df=5)
Y <- rt(sample_size,df=5)
ks.test(X,Y)
sample_size <- 200
run_experiment <- Vectorize(function(x=1) {
X <- rt(sample_size,df=5)
Y <- rt(sample_size,df=5)
ks.test(X,Y)$p.value
})
data <- run_experiment(1:1000)
hist(data,breaks=30)
sample_size <- 200
run_experiment <- Vectorize(function(x=1) {
X <- rt(sample_size,df=5)
Y <- rt(sample_size,df=5)
ks.test(X,Y)$p.value
})
data <- run_experiment(1:1000)
hist(data,breaks=60)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rt(sample_size,df=5)
Y <- rt(sample_size,df=5)
ks.test(X,Y)$p.value
})
data <- run_experiment(1:1000)
hist(data,breaks=60)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rt(sample_size,df=5)
Y <- rt(sample_size,df=5)
ks.test(X,Y)$p.value
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red')
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rnorm(sample_size)
Y <- rnorm(sample_size)
ks.test(X,Y)$p.value
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red')
set.seed(42)
sample_size <- 200
rate <- 2
X <- rexp(sample_size,rate = rate)
Y <- rexp(sample_size,rate = rate)
ks.test(X,Y)
set.seed(42)
sample_size <- 200
X <- rexp(sample_size,rate = 2)
Y <- rexp(sample_size,rate = 3)
ks.test(X,Y)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rnorm(sample_size)
Y <- rnorm(sample_size)
ks.test(X,Y)$p.value
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red')
length(which(data<0.1))/length(data)
set.seed(42)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rnorm(sample_size)
Y <- rnorm(sample_size)
ks.test(X,Y)$p.value
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red')
length(which(data<0.1))/length(data)
plot_two <- function(X,Y) {
require(ggplot2)
require(dplyr)
df1 <- data.frame(values=X,from=deparse(substitute(X)))
df2 <- data.frame(values=Y,from=deparse(substitute(Y)))
df <- bind_rows(df1,df2)
p1 <- ggplot(data=df,aes(x=values,fill=from)) +
geom_histogram(alpha=0.5,aes(y = ..density..), position = 'identity')
df1 <- data.frame(x=quantile(X,probs=seq(from=0,to=1,by=0.02)))
df2 <- data.frame(y=quantile(Y,probs=seq(from=0,to=1,by=0.02)))
df <- bind_cols(df1,df2)
p2 <- ggplot(data=df,aes(x=x,y=y)) +
geom_point() +
geom_smooth(method='lm',color='red')
labs(x=deparse(substitute(X)),y=deparse(substitute(Y)))
multiplot(p1,p2,cols=2)
}
mu <- mean(wage)
sigma <- sd(wage)
sample_size <- length(wage)
candidate <- rnorm(sample_size,mean=mu,sd=sigma)
ks.test(wage,candidate)
plot_two(wage,candidate)
plot_two <- function(X,Y) {
require(ggplot2)
require(dplyr)
df1 <- data.frame(values=X,from=deparse(substitute(X)))
df2 <- data.frame(values=Y,from=deparse(substitute(Y)))
df <- bind_rows(df1,df2)
p1 <- ggplot(data=df,aes(x=values,fill=from)) +
geom_histogram(alpha=0.5,aes(y = ..density..), position = 'identity')
df1 <- data.frame(x=quantile(X,probs=seq(from=0,to=1,by=0.02)))
df2 <- data.frame(y=quantile(Y,probs=seq(from=0,to=1,by=0.02)))
df <- bind_cols(df1,df2)
p2 <- ggplot(data=df,aes(x=x,y=y)) +
geom_point() +
geom_smooth(method='lm',color='red') +
labs(x=deparse(substitute(X)),y=deparse(substitute(Y)))
multiplot(p1,p2,cols=2)
}
plot_two(wage,candidate)
Rsquare <- function(X,Y) {
linear.model <- lm(Y~X)
}
Rsquare(wage,candidate)
Rsquare <- function(X,Y) {
return(lm(Y~X))
}
Rsquare(wage,candidate)
a <- Rsquare(wage,candidate)
summary(a)
Rsquare <- function(X,Y) {
return(summary(lm(Y~X))$r.squared)
}
a <- Rsquare(wage,candidate)
plot_two <- function(X,Y) {
require(ggplot2)
require(dplyr)
df1 <- data.frame(values=X,from=deparse(substitute(X)))
df2 <- data.frame(values=Y,from=deparse(substitute(Y)))
df <- bind_rows(df1,df2)
p1 <- ggplot(data=df,aes(x=values,fill=from)) +
geom_histogram(alpha=0.5,aes(y = ..density..), position = 'identity')
df1 <- data.frame(x=quantile(X,probs=seq(from=0,to=1,by=0.02)))
df2 <- data.frame(y=quantile(Y,probs=seq(from=0,to=1,by=0.02)))
df <- bind_cols(df1,df2)
p2 <- ggplot(data=df,aes(x=x,y=y)) +
geom_point() +
geom_smooth(method='lm',color='red') +
labs(x=deparse(substitute(X)),y=deparse(substitute(Y)))
multiplot(p1,p2,cols=2)
}
rsquared <- function(X,Y) {
return(summary(lm(Y~X))$r.squared)
}
rsquared(wage,candidate)
plot_two(wage,candidate)
plot_two <- function(X,Y) {
require(ggplot2)
require(dplyr)
df1 <- data.frame(values=X,from=deparse(substitute(X)))
df2 <- data.frame(values=Y,from=deparse(substitute(Y)))
df <- bind_rows(df1,df2)
p1 <- ggplot(data=df,aes(x=values,fill=from)) +
geom_histogram(alpha=0.5,aes(y = ..density..), position = 'identity')
df1 <- data.frame(x=quantile(X,probs=seq(from=0,to=1,by=0.02)))
df2 <- data.frame(y=quantile(Y,probs=seq(from=0,to=1,by=0.02)))
df <- bind_cols(df1,df2)
p2 <- ggplot(data=df,aes(x=x,y=y)) +
geom_point() +
geom_smooth(method='lm',color='red') +
labs(x=deparse(substitute(X)),y=deparse(substitute(Y)))
multiplot(p1,p2,cols=2)
}
rsquared <- function(X,Y) {
x=quantile(X,probs=seq(from=0,to=1,by=0.02))
y=quantile(Y,probs=seq(from=0,to=1,by=0.02))
return(summary(lm(y~x))$r.squared)
}
rsquared(wage,candidate)
X <- (wage-min(wage))/(max(wage)-min(wage))
mu <- mean(X)
va <- var(X)
sample_size <- length(X)
alpha <- mu*(mu*(1-mu)/va-1)
beta <- (1-mu)*(mu*(1-mu)/va-1)
candidate <- rbeta(sample_size,shape1=alpha,shape2=beta)
ks.test(X,candidate)
plot_two(X,candidate)
rsquared(X,candidate)
set.seed(42)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rnorm(sample_size)
Y <- rnorm(sample_size)
rsquared(X,Y)
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red')
set.seed(42)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rnorm(sample_size)
Y <- rnorm(sample_size)
rsquared(X,Y)
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red',
xlim=c(0,1))
set.seed(42)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rnorm(sample_size)
Y <- rnorm(sample_size)
ks.test(X,Y)$p.value
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red',
xlim=c(0,1))
X <- (wage-min(wage))/(max(wage)-min(wage))
mu <- mean(X)
va <- var(X)
sample_size <- length(X)
alpha <- mu*(mu*(1-mu)/va-1)
beta <- (1-mu)*(mu*(1-mu)/va-1)
candidate <- rbeta(sample_size,shape1=alpha,shape2=beta)
ks.test(X,candidate)
plot_two(X,candidate)
rsquared(X,candidate)
X <- wage
mu <- mean(X)
va <- var(X)
X <- (X-mu)/sqrt(va)
sample_size <- length(X)
candidate <- rt(sample_size,df=sample_size-1)
ks.test(X,candidate)
plot_two(X,candidate)
rsquared(X,candidate)
hist(log(wage),breaks=60)
X <- log(wage)
mu <- mean(X)
sigma <- sd(X)
sample_size <- length(X)
candidate <- rnorm(sample_size,mean=mu,sd=sigma)
ks.test(X,candidate)
plot_two(X,candidate)
rsquared(X,candidate)
sample_size <- length(wage)
candidate <- rexp(sample_size,rate=1/mean(wage))
ks.test(wage,candidate)
plot_two(wage,candidate)
rsquared(wage,candidate)
mu <- mean(wage)
sigma <- sd(wage)
sample_size <- length(wage)
candidate <- rnorm(sample_size,mean=mu,sd=sigma)
ks.test(wage,candidate)
plot_two(wage,candidate)
rsquared(wage,candidate)
set.seed(42)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rnorm(sample_size)
Y <- rexp(sample_size,rate=1)
rsquared(X,Y)
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red',
xlim=c(0,1))
set.seed(42)
sample_size <- 500
run_experiment <- Vectorize(function(x=1) {
X <- rnorm(sample_size)
Y <- rexp(sample_size,rate=0.2)
rsquared(X,Y)
})
data <- run_experiment(1:1000)
hist(data,breaks=30,col='red',
xlim=c(0,1))
run_experiment <- Vectorize(
function(x=1) { #dummy variable x=1 here!
sample(c(0,1),1)
}
)
data <- run_experiment(1:20)
set.seed(42) # Hitchhiker's Guide
number_of_experiments <- 100000
one_die <- 1:6
one_roll <- Vectorize(function(x=1) {
return(sum(sample(one_die,2,replace=TRUE)))
})
print(one_roll())
print(one_roll(1))
print(one_roll(1))
one_roll(1:10)
data <- one_roll(1:number_of_experiments)
number_of_7 <- length(which(data==7))
number_of_7/number_of_experiments
6/36
run_experiments <- Vectorize(function(number_of_experiments) {
data <- one_roll(1:number_of_experiments)
number_of_7 <- length(which(data==7))
return(number_of_7/number_of_experiments)
})
X <- 100*(1:200)
estimates <- run_experiments(X)
estimates <- run_experiments(X)
Y <- abs(estimates-6/36)
plot(X,Y)
set.seed(42)
number_of_trips <- 10000
one_trip <- Vectorize(function() {
coin_flips <- sample(c(-1,1),100,replace=TRUE)
extra_steps <- 2*coin_flips
location <- cumsum(1+extra_steps)
return(tail(location,1))
})
data <- one_trip(1:number_of_trips)
set.seed(42)
number_of_trips <- 10000
one_trip <- Vectorize(function(x=1) {
coin_flips <- sample(c(-1,1),100,replace=TRUE)
extra_steps <- 2*coin_flips
location <- cumsum(1+extra_steps)
return(tail(location,1))
})
data <- one_trip(1:number_of_trips)
hist(data,breaks=60,col='blue')
data(faithful)
head(faithful)
X <- faithful$waiting
hist(X,breaks=60)
X <- X[X>68]
hist(X,breaks=30,freq=FALSE)
mu <- mean(X)
sigma <- sd(X)
hist(X,breaks=30,freq=FALSE)
x <- seq(from=69,to=100,by=0.5)
y <- dnorm(x,mean=mu,sd=sigma)
lines(x,y,col='blue',lwd=3)
sample_size <- length(X)
one_mean <- Vectorize(function(x=1) {
return(mean(sample(X,sample_size,replace=TRUE)))
})
sample_means <- one_mean(1:sample_size)
meanmu <- mean(sample_means)
meansigma <- sd(sample_means)
xmean <- seq(from=78,to=83,by=0.01)
ymean <- dnorm(xmean,mean=meanmu,sd=meansigma)
hist(X,breaks=30,freq=FALSE,ylim=c(0,max(ymean)))
lines(x,y,col='blue',lwd=3)
lines(xmean,ymean,col='red',lwd=3)
interval90 <- qnorm(c(.05,.95),mean=meanmu,sd=meansigma)
interval90
hist(X,breaks=30,freq=FALSE)
x <- seq(from=69,to=100,by=0.5)
y <- dnorm(x,mean=mu,sd=sigma)
lines(x,y,col='blue',lwd=3)
abline(v=interval90[1],col='red',lwd=3)
abline(v=interval90[2],col='red',lwd=3)
hist(X,breaks=30,freq=FALSE)
x <- seq(from=69,to=100,by=0.5)
y <- dnorm(x,mean=mu,sd=sigma)
lines(x,y,col='blue',lwd=3)
abline(v=interval95[1],col='red',lwd=3)
abline(v=interval95[2],col='red',lwd=3)
data(sunspot.year)
data(sunspot.year)
spots <- ceiling(sunspot.year)
head(spots)
countem <- Vectorize(function(x) {
sum(spots==x)
})
X <- 0:max(spots)
temp <- countem(X)
f <- temp/sum(temp)
barplot(f)
set.seed(42)
y <- runif(1000)
find_X <- Vectorize(function(y) {
location <- which.min(abs(Y-y))
return(X[location])
})
draws <- find_X(y)
hist(draws,breaks=60)
draws=sample(spots,1000,replace=TRUE)
hist(draws,breaks=60)
