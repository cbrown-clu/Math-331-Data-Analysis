x <- seq(from=-3,to=3,by=0.1)
f <- Vectorize(function(x) {
return(2^x-2+x^2)
})
y <- f(x)
plot(x,y,type='l',lwd=2)
x <- seq(from=-1,to=1,by=0.01)
f <- Vectorize(function(x) {
return(2^x-2+x^2)
})
y <- f(x)
plot(x,y,type='l',lwd=2)
x <- seq(from=-2,to=1,by=0.01)
f <- Vectorize(function(x) {
return(2^x-2+x^2)
})
y <- f(x)
plot(x,y,type='l',lwd=2)
abline(v=0)
abline(h=0)
library("Lahman")
install.packages("Lahman")
install.packages("pitchRx")
library("Lahman")
library("pitchRx")
library("ggplot2")
library("tidyverse")
library("dplyr")
pitching_05_07_2011<-scrape(start="2011-05-07", end="2011-05-07")
atbats<-pitching_05_07_2011$atbat
pitches<-pitching_05_07_2011$pitch
head(atbats)
head(pitches)
verlander_nohitter<-filter(atbats,atbats$pitcher_name=="Justin Verlander")
verlander_nohitter
?merge
X <- c(verlander_nohitter$url,pitches$url)
unqieu(X)
unique(X)
pitching_atbats<-merge(verlander_nohitter,pitches,by=c("url","pitcher","batter")
pitching_atbats<-merge(verlander_nohitter,pitches,by=c("url","pitcher","batter"))
pitching_atbats
pitching_atbats<-merge(verlander_nohitter,pitches,by=c("url","pitcher","batter"))
pitches
atbats$pitcher
verlander_nohitter$start_tfs
pitching_atbats<-merge(verlander_nohitter,pitches,by="gameday_link")
pitching_atbats
unique(verlander_nohitter$gameday_link)
unique(verlander_nohitter$url)
pitching_atbats<-merge(verlander_nohitter,pitches,by="url")
unique(verlander_nohitter$start_tfs)
unique(verlander_nohitter$start_tfs_zulu)
verlander_nohitter <- verlander_nohitter[order(verlander_nohitter$start_tfs),]
verlander_nohitter$start_tfs
verlander_nohitter$start_tfs_zulu
atbats <- atbats[order(pitches$tfs),]
pitches <- pitches[order(pitches$tfs),]
pitches$tfs
atbats$start_tfs
atbats<-pitching_05_07_2011$atbat
pitches<-pitching_05_07_2011$pitch
atbats <- atbats[order(atbats$start_tfs),]
pitches <- pitches[order(pitches$tfs),]
atbats$start_tfs
k <- 2.5
f <- function(x) {
return(k*x*(1-x))
}
?kmeans
k <- 2.5
f <- function(x) {
return(k*x*(1-x))
}
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
kmeans(record,centers=record,iter.max=100)$centers
}
dds_stability(f,0.1)
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
kmeans(record,centers=unique(record),iter.max=100)$centers
}
dds_stability(f,0.1)
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
unique(kmeans(record,centers=unique(record),iter.max=100)$centers)
}
dds_stability(f,0.1)
y <- dds_stability(f,0.1)
y[,1]
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1])
}
y <- dds_stability(f,0.1)
y[1]
y[2]
unique(y)
class(y)
print(record)
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
print(record)
unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1])
}
y <- dds_stability(f,0.1)
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
print(unique(record))
unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1])
}
y <- dds_stability(f,0.1)
y[2]-y[1]
epsilon_filter <- function(x,epsilon <- 10^(-5)) {
y <- x
y <- unique(y)
i <- 1
while(i<= length(y)) {
flag <- abs(y-y[i])>0 & abs(y-y[i])<epsilon
y <- y[-which(flag)]
i <- i+1
}
return(y)
}
epsilon_filter <- function(x,epsilon <- 10^(-5)) {
y <- x
y <- unique(y)
i <- 1
while(i<= length(y)) {
flag <- abs(y-y[i])>0 & abs(y-y[i])<epsilon
y <- y[-which(flag)]
i <- i+1
}
return(y)
}
epsilon_filter <- function(x,epsilon = 10^(-5)) {
y <- x
y <- unique(y)
i <- 1
while(i<= length(y)) {
flag <- abs(y-y[i])>0 & abs(y-y[i])<epsilon
y <- y[-which(flag)]
i <- i+1
}
return(y)
}
y
epsilon_filter <- function(x,epsilon = 10^(-5)) {
y <- x
y <- unique(y)
i <- 1
while(i<= length(y)) {
flag <- abs(y-y[i])>0 & abs(y-y[i])<epsilon
y <- y[-which(flag)]
i <- i+1
}
return(y)
}
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
print(unique(record))
unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1])
}
y <- dds_stability(f,0.1)
y
epsilon_filter(y)
epsilon_filter <- function(x,epsilon = 10^(-10)) {
y <- x
y <- unique(y)
i <- 1
while(i<= length(y)) {
flag <- abs(y-y[i])>0 & abs(y-y[i])<epsilon
y <- y[-which(flag)]
i <- i+1
}
return(y)
}
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
print(unique(record))
unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1])
}
y <- dds_stability(f,0.1)
epsilon_filter(y)
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
print(unique(record))
epsilon_filter(unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1]))
}
y <- dds_stability(f,0.1)
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
epsilon_filter(unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1]))
}
y <- dds_stability(f,0.1)
k <- 3.2
f <- function(x) {
return(k*x*(1-x))
}
epsilon_filter <- function(x,epsilon = 10^(-10)) {
y <- x
y <- unique(y)
i <- 1
while(i<= length(y)) {
flag <- abs(y-y[i])>0 & abs(y-y[i])<epsilon
y <- y[-which(flag)]
i <- i+1
}
return(y)
}
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
epsilon_filter(unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1]))
}
y <- dds_stability(f,0.1)
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1])
}
y <- dds_stability(f,0.1)
epsilon_filter(y)
epsilon_filter <- function(x,epsilon = 10^(-10)) {
y <- x
y <- unique(y)
i <- 1
print(y)
while(i<= length(y)) {
flag <- abs(y-y[i])>0 & abs(y-y[i])<epsilon
y <- y[-which(flag)]
i <- i+1
print(y)
}
return(y)
}
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1])
}
y <- dds_stability(f,0.1)
epsilon_filter(y)
epsilon_filter <- function(x,epsilon = 10^(-10)) {
y <- x
print(y)
y <- unique(y)
i <- 1
print(y)
while(i<= length(y)) {
flag <- abs(y-y[i])>0 & abs(y-y[i])<epsilon
y <- y[-which(flag)]
i <- i+1
print(y)
}
return(y)
}
epsilon_filter(y)
i <- 1
epsilon <- 10^(-10)
abs(y-y[i])>0 & abs(y-y[i])<epsilon
which(abs(y-y[i])>0 & abs(y-y[i])<epsilon)
!(abs(y-y[i])>0 & abs(y-y[i])<epsilon)
epsilon_filter <- function(x,epsilon = 10^(-10)) {
y <- x
print(y)
y <- unique(y)
i <- 1
print(y)
while(i<= length(y)) {
flag <- !(abs(y-y[i])>0 & abs(y-y[i])<epsilon)
y <- y[flag]
i <- i+1
print(y)
}
return(y)
}
epsilon_filter(y)
epsilon_filter <- function(x,epsilon = 10^(-10)) {
y <- x
y <- unique(y)
i <- 1
while(i<= length(y)) {
flag <- !(abs(y-y[i])>0 & abs(y-y[i])<epsilon)
y <- y[flag]
i <- i+1
}
return(y)
}
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
epsilon_filter(unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1]))
}
y <- dds_stability(f,0.1)
k <- 3.6
f <- function(x) {
return(k*x*(1-x))
}
epsilon_filter <- function(x,epsilon = 10^(-10)) {
y <- x
y <- unique(y)
i <- 1
while(i<= length(y)) {
flag <- !(abs(y-y[i])>0 & abs(y-y[i])<epsilon)
y <- y[flag]
i <- i+1
}
return(y)
}
dds_stability <- function(f,initial,burnin=5000,len=500) {
x <- initial
for (i in 1:burnin) {
x <- f(x)
}
record <- c(x)
for (i in 2:len) {
x <- f(x)
record <- c(record,x)
}
epsilon_filter(unique(kmeans(record,centers=unique(record),iter.max=100)$centers[,1]))
}
y <- dds_stability(f,0.1)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
x <- seq(from=0,to=1,by=0.01)
y <- x^2-2
y
y <- x^2+2
y
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
df <- read.csv("https://github.com/cbrown-clu/Math-331-Data-Analysis/blob/master/B.%20Data%20sets/BookstorePriceData.csv")
url <- "https://github.com/cbrown-clu/Math-331-Data-Analysis/blob/master/B.%20Data%20sets/BookstorePriceData.csv"
df <- read.csv(url)
df <- read.csv(file=url)
url <- "https://github.com/cbrown-clu/Math-331-Data-Analysis/blob/master/B.%20Data%20sets/BookstorePriceData.csv"
df <- read.csv(file=url)
url <- "http://github.com/cbrown-clu/Math-331-Data-Analysis/blob/master/B.%20Data%20sets/BookstorePriceData.csv"
df <- read.csv(file=url)
?read.csv
df <- read.csv(file=url,header=TRUE)
head(df)
url <- "http://github.com/Math-331-Data-Analysis/B. Data sets/BookstorePriceData.csv"
df <- read.csv(file=url,header=TRUE)
library(RCurl)
library(RCurl)
url <- "https://github.com/cbrown-clu/Math-331-Data-Analysis/blob/master/B.%20Data%20sets/BookstorePriceData.csv"
out <- getURL(url)
url <- "http://github.com/cbrown-clu/Math-331-Data-Analysis/blob/master/B.%20Data%20sets/BookstorePriceData.csv"
out <- getURL(url)
