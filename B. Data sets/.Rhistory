# O-ring space shuttle data
library(data.table)
shuttle <- fread("http://archive.ics.uci.edu/ml/machine-learning-databases/space-shuttle/o-ring-erosion-or-blowby.data")
names(shuttle) <- c('Number.Orings.At.Risk',
'Number.Orings.In.Thermal.Distress',
'Launch.Temperature',
'Leak-check.Pressure.PSI',
'Temporal.Order.Of.Flight')
write.csv(shuttle,'shuttle.csv',row.names=FALSE)
# TMDb 5000 movie dataset from kaggle.com
# https://www.kaggle.com/tmdb/tmdb-movie-metadata
#
temp <- tempfile()
download.file("https://www.kaggle.com/tmdb/tmdb-movie-metadata/downloads/tmdb_5000_movies.csv/2",temp)
# TMDb 5000 movie dataset from kaggle.com
# https://www.kaggle.com/tmdb/tmdb-movie-metadata
#
# I downloaded this to my machine and loaded it into R.  You can access it at the URL
# but I believe you will need to install the Kaggle client on your machine to download
# Directly from the website.
movies <- read.csv("tmdb_5000_movies.csv")
?read.csv
# TMDb 5000 movie dataset from kaggle.com
# https://www.kaggle.com/tmdb/tmdb-movie-metadata
#
# I downloaded this to my machine and loaded it into R.  You can access it at the URL
# but I believe you will need to install the Kaggle client on your machine to download
# Directly from the website.
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
install.packages('ISLR')
# Data sets from ISLR
library(ISLR)
data(Auto)
auto <- write.csv(Auto,"auto.csv",row.names=FALSE)
head(Auto)
install.packages('MASS')
library(MASS)
data(Boston)
head(Boston)
boston <- write.csv(Boston,"boston.csv",row.names = FALSE)
data("Caravan")
data("Carseats")
write.csv(Carseats,"carseats.csv",row.names=FALSE)
data(College)
write.csv(College,"college.csv",row.names = FALSE)
data(Default)
write.csv(Default,"default.csv",row.names = FALSE)
data("Hitters")
write.csv(Hitters,"hitters.csv",row.names = FALSE)
data("Khan")
write.csv(Khan,"khan.csv",row.names = FALSE)
head(Khan)
write.list(Khan,"khan.csv",row.names = FALSE)
?write
# This next one is a bit odd, because it is not a tabular data structure.
data("Khan")
sink("khan.txt")
print(Khan)
sink()
# To read this back in use
khan <- read("khan.txt")
# To read this back in use
khan <- read.table("khan.txt")
# To read this back in use
khan <- scan("khan.txt")
# To read this back in use
khan <- readLines("khan.txt")
# To read this back in use
raw_khan <- readLines("khan.txt")
print(raw_khan)
data("NCI60")
head(NCI60)
data("OJ")
head(OJ)
write.csv(OJ,"oj.csv",row.names = FALSE)
data(Portfolio)
write.csv(Portfolio,"portfolio.csv",row.names = FALSE)
data(Smarket)
write.csv(Smarket,"smarket.csv",row.names = FALSE)
data(USArrests)
write.csv(USArrests,"usarrests.csv",row.names = FALSE)
data("Wage")
write.csv(Wage,"wage.csv",row.names = FALSE)
data(Weekly)
write.csv(Weekly,"weekly.csv",row.names = FALSE)
# Kaggle exoplanet data
exo <- read.csv("exoTest.csv",row.names = FALSE)
# Kaggle exoplanet data
rawexo <- readLines("exoTest.csv")
# Kaggle exoplanet data
exo <- read.csv("exoTest.csv")
?read.csv
# Mud crab data
mudcrab <- read.csv("mudcrab", sep=' ')
# Mud crab data
mudcrab <- read.csv("mudcrab.txt", sep=' ')
# Mud crab data
mudcrab <- read.csv("mudcrab.txt", sep=' ')
# Mud crab data
mudcrab <- read.csv("mudcrab.txt", sep=' ',strip.white = TRUE)
# Mud crab data
mudcrab <- readLines("mudcrab.txt")
# Mud crab data
mudcrab <- readLines("mudcrab.txt")
# Mud crab data
rawmudcrab <- readLines("mudcrab.txt")
rawmudcrab[1]
process_line <- function(y) {
strsplit(y,"\\s+")[[1]]
}
process_line(rawmudcrab[1])
mc <- data.frame(names = process_line(rawmudcrab[1]))
mc <- data.frame()
names(mc) <- process_line(rawmudcrab[1])
library(dplyr)
bind_rows(mc,process_line(rawmudcrab[2]))
?table
?matrix
mc_names <- process_line(rawmudcrab[1])
mc <- matrix(ncol = length(mc_names))
bind_rows(mc,process_line(rawmudcrab[2]))
# Mud crab data
rawmudcrab <- readLines("mudcrab.txt")
mc_names <- strsplit(rawmudcrab[1],"\\s+")[[1]]
process_line <- function(y) {
data <- strsplit(y,"\\s+")[[1]]
names(data) <- mc_names
return(data)
}
mc <- matrix(ncol = length(mc_names))
library(dplyr)
bind_rows(mc,process_line(rawmudcrab[2]))
process_line <- function(y) {
strsplit(y,"\\s+")[[1]]
}
mc <- matrix(ncol = length(mc_names),
colnames = mc_names)
mc <- matrix(ncol = length(mc_names),
dimnames = list(1:(length(rawmudcrab)-1),mc_names))
mc <- matrix(nrow = length(rawmudcrab)-1, ncol = length(mc_names),
dimnames = list(1:(length(rawmudcrab)-1),mc_names))
mc[1,] <- process_line(rawmudcrab[2])
mc
for (j in range(nrow(mc))) {
mc[j,] <- process_line(rawmudcrab[j+1])
}
head(mc)
nrow(mc)
# Mud crab data
rawmudcrab <- readLines("mudcrab.txt")
mc_names <- strsplit(rawmudcrab[1],"\\s+")[[1]]
process_line <- function(y) {
strsplit(y,"\\s+")[[1]]
}
mc <- matrix(nrow = length(rawmudcrab)-1, ncol = length(mc_names),
dimnames = list(1:(length(rawmudcrab)-1),mc_names))
library(dplyr)
for (j in range(nrow(mc))) {
mc[j,] <- process_line(rawmudcrab[j+1])
}
for (j in range(nrow(mc))) {
mc[j,] <<- process_line(rawmudcrab[j+1])
}
# Mud crab data
rawmudcrab <- readLines("mudcrab.txt")
process_line <- function(y) {
strsplit(y,"\\s+")[[1]]
}
mc_names <- process_line(rawmudcrab[1])
mc <- matrix(nrow = length(rawmudcrab)-1, ncol = length(mc_names),
dimnames = list(1:(length(rawmudcrab)-1),mc_names))
library(dplyr)
for (j in range(nrow(mc))) {
mc[j,] <- process_line(rawmudcrab[j+1])
}
head(mc)
mc[2,] <- process_line(rawmudcrab[3])
for (j in 1:nrow(mc)) {
mc[j,] <- process_line(rawmudcrab[j+1])
}
head(mc)
write.csv(mc,"temp.csv",row.names=FALSE)
df <- read.csv("temp.csv")
write.csv(mc,"mudcrab.csv",row.names=FALSE)
