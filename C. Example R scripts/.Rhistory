# 1. Import the data.  This dataset is part of R's
#    datasets library, and so we can simply load it with
#    the data command.
data(iris)
head(iris)
# Everything looks good, and it does not appear that
# we will need to change the types of any variables.
# So let's move on to...
# 2. Summarize variables
summary(iris)
# For numerical variables, we will see a five number
# summary of each together with the mean.  For categorical
# data (factors) we will see a frequency count for each
# level in the factor.  Here, we see that we have
# 50 records for each species.
#
# Graphically, we can compare the histograms for each
# variable for the three species.
library(ggplot2)
ggplot(data=iris,aes(x=Sepal.Length,fill=Species)) +
geom_histogram()
ggplot(data=iris,aes(x=Sepal.Length,fill=Species)) +
geom_histogram(alpha=0.5)
ggplot(data=iris,aes(x=Sepal.Length,fill=Species)) +
geom_histogram(aes(alpha=0.5))
ggplot(data=iris,aes(x=Sepal.Length,fill=Species,alpha=0.5)) +
geom_histogram()
ggplot(data=iris,aes(x=Sepal.Length,fill=Species,alpha=0.5)) +
geom_histogram()
ggplot(data=iris,aes(x=Sepal.Length,fill=Species,alpha=0.5)) +
geom_histogram(bins=50)
ggplot(data=iris,aes(x=Sepal.Length,fill=Species,alpha=0.5,colour=black)) +
geom_histogram(bins=50)
ggplot(data=iris,aes(x=Sepal.Length,fill=Species,alpha=0.5,colour="black")) +
geom_histogram(bins=50)
ggplot(data=iris,aes(x=Sepal.Length,fill=Species,alpha=0.5,colour=Species)) +
geom_histogram(bins=50)
ggplot(data=iris,aes(x=Sepal.Length,fill=Species,colour=Species)) +
geom_histogram(bins=50)
ggplot(data=iris,aes(x=Sepal.Length,fill=Species,colour=Species,alpha=0.2)) +
geom_histogram(bins=50)
ggplot(data=iris,aes(x=Sepal.Length,fill="white",colour=Species,position="dodge")) +
geom_histogram(bins=50)
ggplot(data=iris,aes(x=Sepal.Length)) +
geom_histogram(bins=50,fill="white",colour=Species,position="dodge")
ggplot(data=iris,aes(x=Sepal.Length,colour=Species)) +
geom_histogram(bins=50,fill="white",position="dodge")
ggplot(data=iris,aes(x=Sepal.Length,colour=Species)) +
geom_histogram(bins=50,fill=Species,position="dodge")
ggplot(data=iris,aes(x=Sepal.Length,colour=Species,fill=Species)) +
geom_histogram(bins=50,position="dodge")
ggplot(data=iris,aes(x=Sepal.Length,colour=Species,fill=Species)) +
geom_histogram(bins=50,position="dodge",alpha=0.4)
ggplot(data=iris,aes(x=Sepal.Length,colour=Species,fill=Species)) +
geom_histogram(bins=50,position="dodge",alpha=0.4) +
labs(title="Sepal Length")
ggplot(data=iris,aes(x=Sepal.Width,colour=Species,fill=Species)) +
geom_histogram(bins=50,position="dodge",alpha=0.4) +
labs(title="Sepal Length")
ggplot(data=iris,aes(x=Petal.Length,colour=Species,fill=Species)) +
geom_histogram(bins=50,position="dodge",alpha=0.4) +
labs(title="Sepal Length")
ggplot(data=iris,aes(x=Petal.Width,colour=Species,fill=Species)) +
geom_histogram(bins=50,position="dodge",alpha=0.4) +
labs(title="Sepal Length")
# Is this relatively constant across each species?  Does
# this differ from species to species?
#
# At this point we can perform steps 4, 5, and 6 for each
# of our questions.
# For Question A, we can already see some answers in our
# histograms above.
#
# For Question B, we will need to compute some new
# variables and some new plots.
df <- iris
df$PetalRatio <- df$Petal.Length/df$Petal.Width
df$SepalRatio <- df$Sepal.Length/Sepal.Width
df$SepalRatio <- df$Sepal.Length/df$Sepal.Width
ggplot(data=df,aes(x=PetalRatio,colour=Species,fill=Species)) +
geom_histogram(bins=30,position="dodge",alpha=0.4) +
labs(title="Ratio of Petal Length to Petal Width")
ggplot(data=df,aes(x=SepalRatio,colour=Species,fill=Species)) +
geom_histogram(bins=30,position="dodge",alpha=0.4) +
labs(title="Ratio of Sepal Length to Petal Width")
ggplot(data=df,aes(x=SepalRatio,colour=Species,fill=Species)) +
geom_histogram(bins=30,position="dodge",alpha=0.4) +
labs(title="Ratio of Sepal Length to Sepal Width")
ggplot2(data=iris,aes(x=Species,y=Sepal.Length)) +
geom_boxplot() +
labs(title="Sepal.Length")
ggplot(data=iris,aes(x=Species,y=Sepal.Length)) +
geom_boxplot() +
labs(title="Sepal.Length")
library(ggplot2)
ggplot(data=iris,aes(x=Species,y=Sepal.Length)) +
geom_boxplot() +
labs(title="Sepal.Length")
source('~/GitHub/Math-331-Data-Analysis/Example R scripts/IrisExample.R', echo=TRUE)
ggplot(data=iris,aes(x=Species,y=Sepal.Length,fill=Species)) +
geom_boxplot() +
labs(title="Sepal.Length")
ggplot(data=iris,aes(x=Species,y=Sepal.Length,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Sepal.Length")
ggplot(data=iris,aes(x=Species,y=Sepal.Length,fill=Species)) +
geom_boxplot(outlier.color = 'red',outlier.shape = 1) +
labs(title="Sepal.Length")
ggplot(data=iris,aes(x=Species,y=Sepal.Width,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Sepal.Width")
ggplot(data=iris,aes(x=Species,y=Sepal.Length,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Petal.Length")
ggplot(data=iris,aes(x=Species,y=Sepal.Length,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Petal.Width")
ggplot(data=iris,aes(x=Species,y=Petal.Length,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Petal.Length")
ggplot(data=iris,aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Petal.Width")
# Is this relatively constant across each species?  Does
# this differ from species to species?
#
# At this point we can perform steps 4, 5, and 6 for each
# of our questions.
# For Question A, we can already see some answers in our
# histograms above.
#
# For Question B, we will need to compute some new
# variables and some new plots.
df <- iris
df$PetalRatio <- df$Petal.Length/df$Petal.Width
df$SepalRatio <- df$Sepal.Length/df$Sepal.Width
ggplot(data=df,aes(x=PetalRatio,colour=Species,fill=Species)) +
geom_histogram(bins=30,position="dodge",alpha=0.4) +
labs(title="Ratio of Petal Length to Petal Width")
ggplot(data=df,aes(x=SepalRatio,colour=Species,fill=Species)) +
geom_histogram(bins=30,position="dodge",alpha=0.4) +
labs(title="Ratio of Sepal Length to Sepal Width")
ggplot(data=df,aes(x=Species,y=PetalRatio,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Ratio of Petal Length to Petal Width")
ggplot(data=df,aes(x=Species,y=SepalRatio,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Ratio of Sepal Length to Petal Width")
# WHile the histogram contains more information, sometimes
# the box-whisker plot is easier to read.
ggplot(data=iris,aes(x=Species,y=Sepal.Length,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Sepal.Length")
ggplot(data=iris,aes(x=Species,y=Sepal.Width,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Sepal.Width")
ggplot(data=iris,aes(x=Species,y=Petal.Length,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Petal.Length")
ggplot(data=iris,aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot(outlier.color = 'red') +
labs(title="Petal.Width")
# this differ from species to species?
#
# At this point we can perform steps 4, 5, and 6 for each
# of our questions.
# For Question A, we can already see some answers in our
# histograms above.  We can also formulate a hypothesis
# and perform a formal test of hypothesis.
#
# HYPOTHESIS: Petal length is significantly different
# between the setosa and versicolor species.
x <- iris$Petal.Length[iris$Species='setosa']
y <- iris$Petal.Length[iris$Species='versicolor']
# this differ from species to species?
#
# At this point we can perform steps 4, 5, and 6 for each
# of our questions.
# For Question A, we can already see some answers in our
# histograms above.  We can also formulate a hypothesis
# and perform a formal test of hypothesis.
#
# HYPOTHESIS: Petal length is significantly different
# between the setosa and versicolor species.
x <- iris$Petal.Length[iris$Species=='setosa']
y <- iris$Petal.Length[iris$Species=='versicolor']
t.test(x,y)
# approached the problem correctly.  We will see how
# to do this later in the class.  The basic principole
# we have violated here is that one should never use
# the same data to both FORMULATE (exploratory)
# hypotheses and TEST (inferential) hypotheses.  For
# now, we'll simply recognize that our conclusion is
# not supported as strongly as it should be.
#
# HYPOTHESIS: Petal length is significanlty different
# between the versicolor and virginica species.
x <- iris$Petal.Length[iris$Species=='virginica']
y <- iris$Petal.Length[iris$Species=='versicolor']
t.test(x,y)  # p-value ~ 0
# CONCLUSION: Yes.
#
# HYPOTHESIS: Sepal width is significantly different
# between the versicolor and virginica species.
x <- iris$Sepal.Width[iris$Species=='virginica']
y <- iris$Sepal.Width[iris$Species=='versicolor']
t.test(x,y)  # p-value ~ 0
# Have we answered Question B?  Let's try two tests
# of hypotheses.
#
# HYPOTHESIS: The ratio of petal length to petal
# width is significantly different between the
# setosa and versicolor species.
x <- df$PetalRatio[df$species=='setosa']
y <- df$PetalRatio[df$species=='versicolor']
t.test(x,y)
# Have we answered Question B?  Let's try two tests
# of hypotheses.
#
# HYPOTHESIS: The ratio of petal length to petal
# width is significantly different between the
# setosa and versicolor species.
x <- df$PetalRatio[df$Species=='setosa']
y <- df$PetalRatio[df$Species=='versicolor']
t.test(x,y)
# CONCLUSION: Yes.
#
# HYPOTHESIS: The ratio of petal length to petal
# width is significantly different between the
# virginica and versicolor species.
x <- df$PetalRatio[df$Species=='virginica']
y <- df$PetalRatio[df$Species=='versicolor']
t.test(x,y)
# CONCLUSION: Yes.  But wait...
mean(x)
mean(y)
# record could be a flower belonging to a certain species
# (category) or each record could be a seismograph
# reading in a certain year (category).
# Goal: Group the data by category and compute some
# information for each group.  For example, I might
# like to be able to say how many records are in each
# group, or what the mean petal length of all the
# flowers in one species (category) is.
#
# Example: Iris data set
data(iris)
library(dplyr)
df <- iris %>% group_by(Species) %>%
summarize(Frequency = n(),
Mean.Petal.Length = mean(Petal.Length),
St.Dev.Petal.Length = sd(Petal.Length)) %>%
ungroup()
print(df)
f <- function(x) {
return(mean(x^2))
}
df <- iris %>% group_by(Species) %>%
summarize(Frequency = n(),
Mean.Petal.Length = mean(Petal.Length),
St.Dev.Petal.Length = sd(Petal.Length),
f.of.Petal.Length = f(Petal.Length)) %>%
ungroup()
print(df)
